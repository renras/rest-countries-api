{"version":3,"sources":["Components/Navbar/ToggleDarkMode.module.css","Pages/Home/RegionAccordion.module.css","Pages/Home/Home.module.css","Pages/Home/SingleCountry.module.css","Pages/Home/SearchBar.module.css","Pages/CountryInfo/CountryInfo.module.css","Pages/CountryInfo/CountryInfoContent.module.css","Pages/CountryInfo/GoBack.module.css","Components/Navbar/Navbar.module.css","Pages/Home/Country.module.css","App.module.css","Pages/CountryInfo/BorderCountries.module.css","Pages/Error/Error.module.css","Store/toggleDarkModeSlice.js","Components/Navbar/ToggleDarkModeLogic.js","Components/Navbar/ToggleDarkMode.js","Components/Navbar/Navbar.js","Store/appSlice.js","Pages/Home/CountryLogic.js","Pages/Home/SingleCountry.js","Pages/Home/Country.js","Pages/Home/SearchBarLogic.js","Pages/Home/SearchBar.js","Store/regionAccordionSlice.js","Pages/Home/RegionAccordionLogic.js","Pages/Home/RegionAccordionContent.js","Pages/Home/RegionAccordion.js","Pages/Home/Home.js","Pages/CountryInfo/CountryInfoLogic.js","Pages/CountryInfo/CountryInfoLeftSection.js","Pages/CountryInfo/CountryInfoRightSection.js","Pages/CountryInfo/BorderCountries.js","Pages/CountryInfo/CountryInfoContent.js","Pages/CountryInfo/GoBack.js","Pages/CountryInfo/CountryInfo.js","AppLogic.js","Pages/Error/Error.js","App.js","Store/index.js","index.js"],"names":["module","exports","toggleDarkModeSlice","createSlice","name","initialState","darkMode","reducers","toggleDarkMode","state","document","documentElement","style","setProperty","toggleDarkModeActions","actions","useFetch","dispatch","useDispatch","useSelector","ToggleDarkMode","className","styles","onClick","moon","Navbar","header","getCountries","createAsyncThunk","getState","a","Axios","get","appSlice","status","countries","filteredCountries","searchBarText","borderCountries","updateSearchBarText","action","payload","filterCountries","activeRegion","newCountries","filter","country","toLowerCase","includes","region","setBorderCountries","console","log","extraReducers","pending","fulfilled","data","rejected","appActions","app","regionAccordion","useEffect","SingleCountry","card","src","flags","png","alt","info","population","capital","Country","map","index","link","to","text","value","handleChange","e","target","SearchBar","searchBar","searchIcon","type","placeholder","onChange","regionAccordionSlice","showAccordion","regions","changeActiveRegion","setRegions","forEach","element","push","regionAccordionActions","toggleAccordion","RegionAccordionContent","regionsContainer","RegionAccordion","regionHeader","chevronDown","Home","home","topOfSection","useParams","currentCountry","find","languages","language","borders","alpha3Code","getCurrencies","currencies","error","CountryInfoLeftSection","nativeName","subregion","CountryInfoRightSection","topLevelDomain","join","BorderCountries","length","country_info_footer","borderCountry","CountryInfoContent","country_info","country_info_body","GoBack","icon","CountryInfo","country_section","country_section_content","Error","App","exact","path","loadingIcon","store","configureStore","reducer","appReducer","toggleDarkModeReducer","regionAccordionReducer","middleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0d92aa82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"darkMode\":\"ToggleDarkMode_darkMode__2uyC2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"regionAccordion\":\"RegionAccordion_regionAccordion__3fwl1\",\"regionHeader\":\"RegionAccordion_regionHeader__hBxTF\",\"chevronDown\":\"RegionAccordion_chevronDown__3ENbi\",\"regionsContainer\":\"RegionAccordion_regionsContainer__3kKhp\",\"showAccordion\":\"RegionAccordion_showAccordion__3kmBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__31jky\",\"topOfSection\":\"Home_topOfSection__1eott\",\"countries\":\"Home_countries__2iJ-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SingleCountry_card__1Z8bz\",\"info\":\"SingleCountry_info__2Xeo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__33C0E\",\"searchIcon\":\"SearchBar_searchIcon__YI9vP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"country_section\":\"CountryInfo_country_section__3oYp6\",\"country_section_content\":\"CountryInfo_country_section_content__2YF-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"country_info\":\"CountryInfoContent_country_info__3uFWu\",\"country_info_body\":\"CountryInfoContent_country_info_body__2hvc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"GoBack_link__3V2MM\",\"icon\":\"GoBack_icon__319kA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__31xIC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Country_link__3BO5D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingIcon\":\"App_loadingIcon__AdLY8\",\"rotation\":\"App_rotation__1Hlkn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"country_info_footer\":\"BorderCountries_country_info_footer__2ZOmS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__36RXz\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialToggleDarkModeState = {\r\n  darkMode: false,\r\n};\r\n\r\nconst toggleDarkModeSlice = createSlice({\r\n  name: \"navbar\",\r\n  initialState: initialToggleDarkModeState,\r\n  reducers: {\r\n    toggleDarkMode(state) {\r\n      state.darkMode = !state.darkMode;\r\n      if (!state.darkMode) {\r\n        document.documentElement.style.setProperty(\"--main-bg\", \"#fafafa\");\r\n        document.documentElement.style.setProperty(\"--secondary-bg\", \"#fff\");\r\n        document.documentElement.style.setProperty(\"--text-white\", \"#545454\");\r\n        document.documentElement.style.setProperty(\r\n          \"--shadow\",\r\n          \"0 0 10px 0 rgba(0, 0, 0, 0.1)\"\r\n        );\r\n      }\r\n      if (state.darkMode) {\r\n        document.documentElement.style.setProperty(\"--main-bg\", \"#212e37\");\r\n        document.documentElement.style.setProperty(\"--secondary-bg\", \"#46535d\");\r\n        document.documentElement.style.setProperty(\"--text-white\", \"#f2f2f2\");\r\n        document.documentElement.style.setProperty(\r\n          \"--shadow\",\r\n          \"0 0 20px 0 rgba(0, 0, 0, 0.5)\"\r\n        );\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const toggleDarkModeActions = toggleDarkModeSlice.actions;\r\n\r\nexport default toggleDarkModeSlice.reducer;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { toggleDarkModeActions } from \"../../Store/toggleDarkModeSlice\";\r\n\r\nconst useFetch = () => {\r\n  const dispatch = useDispatch();\r\n  const darkMode = useSelector((state) => state.toggleDarkMode.darkMode);\r\n\r\n  const toggleDarkMode = () => {\r\n    dispatch(toggleDarkModeActions.toggleDarkMode());\r\n  };\r\n\r\n  return { darkMode, toggleDarkMode };\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\n\r\nimport { FaMoon } from \"react-icons/fa\";\r\nimport { BsFillSunFill } from \"react-icons/bs\";\r\nimport styles from \"./ToggleDarkMode.module.css\";\r\nimport useFetch from \"./ToggleDarkModeLogic\";\r\n\r\nconst ToggleDarkMode = () => {\r\n  const { darkMode, toggleDarkMode } = useFetch();\r\n  return (\r\n    <>\r\n      {darkMode ? (\r\n        <button className={styles.darkMode} onClick={toggleDarkMode}>\r\n          <BsFillSunFill className={styles.moon} />\r\n          <p>Light Mode</p>\r\n        </button>\r\n      ) : (\r\n        <button className={styles.darkMode} onClick={toggleDarkMode}>\r\n          <FaMoon className={styles.moon} />\r\n          <p>Dark Mode</p>\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToggleDarkMode;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Navbar.module.css\";\r\nimport ToggleDarkMode from \"./ToggleDarkMode\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <h1>Where in the world?</h1>\r\n      <ToggleDarkMode />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\n\r\nexport const getCountries = createAsyncThunk(\r\n  \"countries/getCountries\",\r\n  async (dispatch, getState) => {\r\n    return await Axios.get(\"https://restcountries.com/v2/all\");\r\n  }\r\n);\r\n\r\nconst appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: {\r\n    status: null,\r\n    countries: [],\r\n    filteredCountries: [],\r\n    searchBarText: \"\",\r\n    borderCountries: [],\r\n  },\r\n  reducers: {\r\n    updateSearchBarText(state, action) {\r\n      state.searchBarText = action.payload;\r\n    },\r\n    filterCountries(state, action) {\r\n      let { searchBarText, activeRegion } = action.payload;\r\n      let newCountries = state.countries.filter((country) => {\r\n        return (\r\n          country.name.toLowerCase().includes(searchBarText.toLowerCase()) &&\r\n          country.region === activeRegion\r\n        );\r\n      });\r\n      if (activeRegion === \"Filter by Region\") {\r\n        newCountries = state.countries.filter((country) => {\r\n          return country.name\r\n            .toLowerCase()\r\n            .includes(searchBarText.toLowerCase());\r\n        });\r\n      }\r\n      state.filteredCountries = newCountries;\r\n    },\r\n    setBorderCountries(state, action) {\r\n      state.borderCountries = action.payload;\r\n      console.log(action.payload);\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getCountries.pending]: (state, action) => {\r\n      state.status = \"loading\";\r\n    },\r\n    [getCountries.fulfilled]: (state, action) => {\r\n      state.status = \"success\";\r\n      state.countries = action.payload.data;\r\n      state.filteredCountries = action.payload.data;\r\n    },\r\n    [getCountries.rejected]: (state, action) => {\r\n      state.status = \"failed\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const appActions = appSlice.actions;\r\n\r\nexport default appSlice.reducer;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { appActions } from \"../../Store/appSlice\";\r\n\r\nconst useFetch = () => {\r\n  const dispatch = useDispatch();\r\n  const searchBarText = useSelector((state) => state.app.searchBarText);\r\n  const filteredCountries = useSelector((state) => state.app.filteredCountries);\r\n  const activeRegion = useSelector(\r\n    (state) => state.regionAccordion.activeRegion\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(appActions.filterCountries({ activeRegion, searchBarText }));\r\n  }, [dispatch, activeRegion, searchBarText]);\r\n\r\n  return { filteredCountries, searchBarText };\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./SingleCountry.module.css\";\r\n\r\nconst SingleCountry = ({ country }) => {\r\n  return (\r\n    <div className={styles.card}>\r\n      <img src={country.flags.png} alt=\"\" />\r\n      <div className={styles.info}>\r\n        <h2>{country.name}</h2>\r\n        <ul>\r\n          <li>\r\n            <b>Population</b>: {country.population}\r\n          </li>\r\n          <li>\r\n            <b>Region</b>: {country.region}\r\n          </li>\r\n          <li>\r\n            <b>Capital</b>: {country.capital}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleCountry;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Country.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useFetch from \"./CountryLogic\";\r\n\r\nimport SingleCountry from \"./SingleCountry\";\r\n\r\nconst Country = () => {\r\n  const { filteredCountries } = useFetch();\r\n\r\n  return (\r\n    <>\r\n      {filteredCountries.map((country, index) => {\r\n        return (\r\n          <Link\r\n            className={styles.link}\r\n            to={`/country-info/${country.name}`}\r\n            key={index}\r\n          >\r\n            <SingleCountry country={country} />\r\n          </Link>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nexport default Country;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { appActions } from \"../../Store/appSlice\";\r\n\r\nconst useFetch = () => {\r\n  const text = useSelector((state) => state.app.value);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    dispatch(appActions.updateSearchBarText(e.target.value));\r\n  };\r\n\r\n  return { text, handleChange };\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\n\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport styles from \"./SearchBar.module.css\";\r\nimport useFetch from \"./SearchBarLogic\";\r\n\r\nconst SearchBar = () => {\r\n  const { text, handleChange } = useFetch();\r\n\r\n  return (\r\n    <div className={styles.searchBar}>\r\n      <FaSearch className={styles.searchIcon} />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for a country...\"\r\n        value={text}\r\n        onChange={handleChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst regionAccordionSlice = createSlice({\r\n  name: \"regionAccordion\",\r\n  initialState: {\r\n    activeRegion: \"Filter by Region\",\r\n    showAccordion: false,\r\n    regions: [],\r\n  },\r\n  reducers: {\r\n    changeActiveRegion(state, action) {\r\n      state.activeRegion = action.payload;\r\n\r\n      if (action.payload === \"None\") {\r\n        state.activeRegion = \"Filter by Region\";\r\n      }\r\n    },\r\n    showAccordion(state, action) {\r\n      state.showAccordion = !state.showAccordion;\r\n    },\r\n    setRegions(state, action) {\r\n      let countries = action.payload;\r\n      let regions = [];\r\n\r\n      countries.forEach((element) => {\r\n        if (!regions.includes(element.region)) {\r\n          regions.push(element.region);\r\n        }\r\n      });\r\n      regions.push(\"None\");\r\n      state.regions = regions;\r\n    },\r\n  },\r\n});\r\n\r\nexport const regionAccordionActions = regionAccordionSlice.actions;\r\n\r\nexport default regionAccordionSlice.reducer;\r\n","import { useEffect } from \"react\";\r\n\r\nimport { regionAccordionActions } from \"../../Store/regionAccordionSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst useFetch = () => {\r\n  const dispatch = useDispatch();\r\n  const countries = useSelector((state) => state.app.countries);\r\n  const regions = useSelector((state) => state.regionAccordion.regions);\r\n  const activeRegion = useSelector(\r\n    (state) => state.regionAccordion.activeRegion\r\n  );\r\n  const showAccordion = useSelector(\r\n    (state) => state.regionAccordion.showAccordion\r\n  );\r\n\r\n  const changeActiveRegion = (region) => {\r\n    dispatch(regionAccordionActions.changeActiveRegion(region));\r\n    dispatch(regionAccordionActions.showAccordion());\r\n  };\r\n\r\n  const toggleAccordion = () => {\r\n    dispatch(regionAccordionActions.showAccordion());\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(regionAccordionActions.setRegions(countries));\r\n  }, [dispatch, countries]);\r\n  return {\r\n    toggleAccordion,\r\n    activeRegion,\r\n    showAccordion,\r\n    regions,\r\n    changeActiveRegion,\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\n\r\nconst RegionAccordionContent = ({\r\n  showAccordion,\r\n  regions,\r\n  changeActiveRegion,\r\n  styles,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`${!showAccordion && styles.showAccordion} ${\r\n        styles.regionsContainer\r\n      }`}\r\n    >\r\n      <ul>\r\n        {regions.map((region, index) => (\r\n          <li onClick={() => changeActiveRegion(region)} key={index}>\r\n            {region}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionAccordionContent;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./RegionAccordion.module.css\";\r\nimport { FaChevronDown } from \"react-icons/fa\";\r\nimport useFetch from \"./RegionAccordionLogic\";\r\nimport RegionAccordionContent from \"./RegionAccordionContent\";\r\n\r\nconst RegionAccordion = () => {\r\n  const {\r\n    toggleAccordion,\r\n    activeRegion,\r\n    showAccordion,\r\n    regions,\r\n    changeActiveRegion,\r\n  } = useFetch();\r\n\r\n  return (\r\n    <div className={styles.regionAccordion}>\r\n      <button className={styles.regionHeader} onClick={toggleAccordion}>\r\n        <p>{activeRegion}</p>\r\n        <FaChevronDown className={styles.chevronDown} />\r\n      </button>\r\n      <RegionAccordionContent\r\n        showAccordion={showAccordion}\r\n        regions={regions}\r\n        changeActiveRegion={changeActiveRegion}\r\n        styles={styles}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionAccordion;\r\n","import React from \"react\";\r\n\r\nimport Country from \"./Country\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport styles from \"./Home.module.css\";\r\nimport RegionAccordion from \"./RegionAccordion\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <section className={styles.home}>\r\n      <div className={styles.topOfSection}>\r\n        <SearchBar />\r\n        <RegionAccordion />\r\n      </div>\r\n      <div className={styles.countries}>\r\n        <Country />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { appActions } from \"../../Store/appSlice\";\r\n\r\nconst useFetch = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useParams();\r\n  const countries = useSelector((state) => state.app.countries);\r\n  const borderCountries = useSelector((state) => state.app.borderCountries);\r\n  const currentCountry = countries.find((country) => country.name === name);\r\n  const getCurrencies = () => {\r\n    try {\r\n      return currentCountry.currencies[0].name;\r\n    } catch (error) {}\r\n  };\r\n  const languages = currentCountry.languages.map((language) => language.name);\r\n\r\n  useEffect(() => {\r\n    if (\"borders\" in currentCountry) {\r\n      const borders = currentCountry.borders;\r\n      const newCountries = countries.filter((country) =>\r\n        borders.includes(country.alpha3Code)\r\n      );\r\n      dispatch(appActions.setBorderCountries(newCountries));\r\n    }\r\n    if (!(\"borders\" in currentCountry)) {\r\n      dispatch(appActions.setBorderCountries([]));\r\n    }\r\n  }, [dispatch, currentCountry, countries]);\r\n\r\n  return { currentCountry, getCurrencies, languages, borderCountries };\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\n\r\nconst CountryInfoLeftSection = ({ currentCountry }) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <b>Native Names</b>: {currentCountry.nativeName}\r\n      </li>\r\n      <li>\r\n        <b>Population</b>: {currentCountry.population}\r\n      </li>\r\n      <li>\r\n        <b>Region</b>: {currentCountry.region}\r\n      </li>\r\n      <li>\r\n        <b>Sub Region</b>: {currentCountry.subregion}\r\n      </li>\r\n      <li>\r\n        <b>Capital</b>: {currentCountry.capital}\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CountryInfoLeftSection;\r\n","import React from \"react\";\r\n\r\nconst CountryInfoRightSection = ({\r\n  currentCountry,\r\n  getCurrencies,\r\n  languages,\r\n}) => {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <b>Top Level Domain</b>: {currentCountry.topLevelDomain}\r\n      </li>\r\n      {getCurrencies() && (\r\n        <li>\r\n          <b>Currencies</b>: {getCurrencies()}{\" \"}\r\n        </li>\r\n      )}\r\n      <li>\r\n        <b>Languages</b>: {languages.join(\", \")}\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CountryInfoRightSection;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./BorderCountries.module.css\";\r\n\r\nconst BorderCountries = ({ borderCountries }) => {\r\n  return (\r\n    <>\r\n      {borderCountries.length > 0 && (\r\n        <div className={styles.country_info_footer}>\r\n          <p>\r\n            <b>Border Countries</b>:\r\n          </p>\r\n          <ul>\r\n            {borderCountries.map((borderCountry, index) => (\r\n              <li key={index}>{borderCountry.name}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BorderCountries;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./CountryInfoContent.module.css\";\r\nimport CountryInfoLeftSection from \"./CountryInfoLeftSection\";\r\nimport CountryInfoRightSection from \"./CountryInfoRightSection\";\r\nimport BorderCountries from \"./BorderCountries\";\r\n\r\nconst CountryInfoContent = ({\r\n  currentCountry,\r\n  getCurrencies,\r\n  languages,\r\n  borderCountries,\r\n}) => {\r\n  return (\r\n    <div className={styles.country_info}>\r\n      <h3>{currentCountry.name}</h3>\r\n      <div className={styles.country_info_body}>\r\n        <CountryInfoLeftSection currentCountry={currentCountry} />\r\n        <CountryInfoRightSection\r\n          currentCountry={currentCountry}\r\n          getCurrencies={getCurrencies}\r\n          languages={languages}\r\n        />\r\n      </div>\r\n      <BorderCountries borderCountries={borderCountries} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryInfoContent;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BsArrowLeft } from \"react-icons/bs\";\r\n\r\nimport styles from \"./GoBack.module.css\";\r\n\r\nconst GoBack = () => {\r\n  return (\r\n    <>\r\n      <Link className={styles.link} to=\"/\">\r\n        <BsArrowLeft className={styles.icon} />\r\n        <p>Back</p>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GoBack;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./CountryInfo.module.css\";\r\nimport useFetch from \"./CountryInfoLogic\";\r\nimport CountryInfoContent from \"./CountryInfoContent\";\r\nimport GoBack from \"./GoBack\";\r\n\r\nconst CountryInfo = () => {\r\n  const { currentCountry, getCurrencies, languages, borderCountries } =\r\n    useFetch();\r\n\r\n  return (\r\n    <section className={styles.country_section}>\r\n      <GoBack />\r\n      <div className={styles.country_section_content}>\r\n        <img src={currentCountry.flags.png} alt=\"countryFlag\" />\r\n        <CountryInfoContent\r\n          getCurrencies={getCurrencies}\r\n          languages={languages}\r\n          borderCountries={borderCountries}\r\n          currentCountry={currentCountry}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CountryInfo;\r\n","import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getCountries } from \"./Store/appSlice\";\r\n\r\nconst useFetch = () => {\r\n  const dispatch = useDispatch();\r\n  const status = useSelector((state) => state.app.status);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCountries());\r\n  }, [dispatch]);\r\n\r\n  return { status };\r\n};\r\n\r\nexport default useFetch;\r\n","import React from \"react\";\r\n\r\nimport styles from \"./Error.module.css\";\r\nimport GoBack from \"../CountryInfo/GoBack\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className={styles.error}>\r\n      <GoBack />\r\n      <h1>Page Not Found</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport Home from \"./Pages/Home/Home\";\r\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\r\nimport styles from \"./App.module.css\";\r\nimport CountryInfo from \"./Pages/CountryInfo/CountryInfo\";\r\nimport useFetch from \"./AppLogic.js\";\r\nimport Error from \"./Pages/Error/Error\";\r\n\r\nfunction App() {\r\n  const { status } = useFetch();\r\n\r\n  return (\r\n    <>\r\n      {status === \"success\" ? (\r\n        <>\r\n          <Router>\r\n            <Navbar />\r\n            <Routes>\r\n              <Route exact path=\"/\" element={<Home />} />\r\n              <Route\r\n                exact\r\n                path=\"/country-info/:name\"\r\n                element={<CountryInfo />}\r\n              />\r\n              <Route path=\"*\" element={<Error />} />\r\n            </Routes>\r\n          </Router>\r\n        </>\r\n      ) : (\r\n        <AiOutlineLoading3Quarters className={styles.loadingIcon} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport toggleDarkModeReducer from \"./toggleDarkModeSlice\";\r\nimport regionAccordionReducer from \"./regionAccordionSlice\";\r\nimport appReducer from \"./appSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n    toggleDarkMode: toggleDarkModeReducer,\r\n    regionAccordion: regionAccordionReducer,\r\n  },\r\n  middleware: [thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./Store/index\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}